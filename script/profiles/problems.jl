using ADNLPModels
using OptimizationProblems, OptimizationProblems.ADNLPProblems #0.5


problem_names = [
  "arwhead"
  , "bdqrtic"
  , "brybnd"
  , "chnrosnb_mod"
  , "clplatea"
  , "clplateb"
  , "clplatec"
  , "cosine"
  , "cragglvy"
  , "curly"
  , "curly10"
  , "curly20"
  , "curly30"
  , "dixmaane"
  , "dixmaanf"
  , "dixmaang"
  , "dixmaanh"
  , "dixmaani"
  , "dixmaanj"
  , "dixmaank"
  , "dixmaanl"
  , "dixmaanm"
  , "dixmaann"
  , "dixmaano"
  , "dixmaanp"
  , "dixon3dq"
  , "dqdrtic"
  , "dqrtic"
  , "edensch"
  , "eg2"
  , "engval1"
  , "errinros_mod"
  , "extrosnb"
  , "fletcbv2"
  , "fletcbv3_mod"
  , "freuroth"
  , "genhumps"
  , "genrose"
  , "genrose"
  , "liarwhd"
  , "morebv"
  , "ncb20"
  , "ncb20b"
  , "noncvxu2"
  , "noncvxun"
  , "nondia"
  , "nondquar"
  , "penalty2"
  , "penalty3"
  , "powellsg"
  , "quartc"
  , "sbrybnd"
  , "schmvett"
  , "sinquad"
  , "sparsine"
  , "sparsqur"
  , "spmsrtls"
  , "srosenbr"
  , "tointgss"
  , "tquartic"
  , "tridia"
  , "vardim"
  , "woods"
]

problems = (ADNLPProblems.eval(Meta.parse(problem))(; n) for problem âˆˆ problem_names)
